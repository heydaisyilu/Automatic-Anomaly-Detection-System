name: Notify anomalies by email

on:
  workflow_run:
    workflows: ["Detect AQI Anomalies"]
    types: [completed]
  workflow_dispatch:
    inputs:
      demo:
        description: "G·ª≠i th√¥ng b√°o DEMO ngay"
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  issues: write

jobs:
  notify:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout at detect commit (if workflow_run)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || '' }}
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy

      - name: Collect changed anomaly files (only on workflow_run)
        id: diff
        if: ${{ github.event_name == 'workflow_run' }}
        run: |
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            CHANGED="$(git diff --name-only HEAD~1 HEAD -- result_anomaly || true)"
          else
            CHANGED="$(git ls-files result_anomaly || true)"
          fi
          echo "$CHANGED"
          {
            echo 'files<<EOF'
            echo "$CHANGED"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Build DEMO report (manual run)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.demo }}
        run: |
          mkdir -p out
          cat > out/anomaly_email.md <<'MD'
          # üö® C·∫£nh b√°o b·∫•t th∆∞·ªùng AQI/Gi√≥ (DEMO, UTC+7)
          | Th√†nh ph·ªë | Th·ªùi ƒëi·ªÉm (UTC+7) | AQI | Gi√≥ | Ph∆∞∆°ng ph√°p | Ngu·ªìn |
          |---|---:|---:|---:|---|---|
          | Ho Chi Minh City | 2025-08-16 12:00 | 180 | 12.3 | Z-score | result_anomaly/z_score/demo.csv |
          | Ho Chi Minh City | 2025-08-16 12:00 | 182 | 12.0 | IsolationForest | result_anomaly/isolation_forest/demo.csv |
          MD

      - name: Render report
        env:
          CHANGED_FILES: ${{ steps.diff.outputs.files }}
        run: |
          python notify/render_email.py

      - name: Send email (SMTP)
        if: hashFiles('out/anomaly_email.md') != ''
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          to: ${{ secrets.MAIL_TO }}
          from: AQI Bot <${{ secrets.MAIL_FROM }}>
          subject: 'AQI/Gi√≥ b·∫•t th∆∞·ªùng ‚Äî Live feed'
          content_type: text/plain
          body: file://out/anomaly_email.md

      - name: Create/Update alert issue and ping you (UTC+7)
        if: hashFiles('out/anomaly_email.md') != ''
        uses: actions/github-script@v7
        env:
          PING_USER: TONY
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('out/anomaly_email.md', 'utf8');
            const {owner, repo} = context.repo;
            const title = 'AQI/Gi√≥ b·∫•t th∆∞·ªùng ‚Äî Live feed';

            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              {owner, repo, state: 'open', per_page: 100}
            );
            let issue = issues.find(i => i.title === title);

            if (!issue) {
              const res = await github.rest.issues.create({ owner, repo, title, body });
              issue = res.data;
            } else {
              await github.rest.issues.update({ owner, repo, issue_number: issue.number, body });
            }

            const ping = process.env.PING_USER ? `@${process.env.PING_USER}` : '';
            // L·∫•y gi·ªù VN (UTC+7) kh√¥ng 12h, d·∫°ng YYYY-MM-DD HH:MM
            const vn = new Date().toLocaleString('sv-SE', { timeZone: 'Asia/Ho_Chi_Minh', hour12: false }).replace(',', '');
            const stamp = vn.slice(0,16) + ' (UTC+7)';
            await github.rest.issues.createComment({
              owner, repo, issue_number: issue.number,
              body: `C·∫≠p nh·∫≠t: ${stamp} ${ping}`
            });
